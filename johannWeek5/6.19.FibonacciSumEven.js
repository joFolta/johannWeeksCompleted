// @channel Morning Challenge:
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
//
// Please work in your same groups from yesterday (edited)


// ------------------------------------
// final term 4Million Version

function fibonacci(){
  let termOne = 0
  let termTwo = 1
  let termTemp = 0
  let even = 0
  let evenSum = 0
  console.log(termOne)

  while (termTwo <4000000) {
    termTemp = termOne
    termOne = termTwo
    termTwo = termTemp + termTwo
    console.log(termTwo)

       if(termTwo % 2 === 0 && termTwo < 4000000){
        even = termTwo
        console.log(even)
        evenSum = even + evenSum
    }
   }
    console.log(evenSum + "sum")
}

fibonacci()


// -------------------------------------
// open parameter version

function fibonacci(maxTerm){
  let termOne = 0
  let termTwo = 1
  let termTemp = 0
  let even = 0
  let evenSum = 0
  console.log(termOne)

  while (termTwo < maxTerm) {
    termTemp = termOne
    termOne = termTwo
    termTwo = termTemp + termTwo
    console.log(termTwo)

       if(termTwo % 2 === 0 && termTwo < maxTerm){
        even = termTwo
        console.log(even)
        evenSum = even + evenSum
    }
   }
    console.log(evenSum + "sum")
}

fibonacci(maxTerm)
